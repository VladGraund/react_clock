{"version":3,"sources":["Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","time","Date","toUTCString","slice","timerId","nameId","this","window","setInterval","setState","console","info","prevProps","clockName","props","debug","clearInterval","className","React","Component","getRandomName","value","now","toString","App","hasClock","document","addEventListener","event","preventDefault","ReactDOM","render","getElementById"],"mappings":"sNAUaA,EAAb,4MACEC,MAAQ,CACNC,MAAM,IAAIC,MAAOC,cAAcC,OAAO,IAAK,IAF/C,EAKEC,QAAU,EALZ,EAOEC,OAAS,EAPX,uDASE,WAAqB,IAAD,OAClBC,KAAKF,QAAUG,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAET,MAAM,IAAIC,MAAOC,cAAcC,OAAO,IAAK,KAE3DO,QAAQC,KAAK,EAAKZ,MAAMC,QACvB,OAdP,gCAiBE,SAAmBY,GACbA,EAAUC,YAAcP,KAAKQ,MAAMD,WAErCH,QAAQK,MAAR,uBAA8BH,EAAUC,UAAxC,eAAwDP,KAAKQ,MAAMD,cApBzE,kCAwBE,WACEN,OAAOS,cAAcV,KAAKF,WAzB9B,oBA4BE,WACE,OACE,sBAAKa,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGX,KAAKQ,MAAMD,YAGb,YAED,sBAAMI,UAAU,cAAhB,SACGX,KAAKP,MAAMC,cAtCtB,GAA2BkB,IAAMC,WCDjC,SAASC,IACP,IAAMC,EAAQpB,KAAKqB,MAAMC,WAAWpB,OAAO,GAE3C,MAAM,SAAN,OAAgBkB,GAGX,IAAMG,EAAb,4MACEzB,MAAQ,CACN0B,UAAU,EACVZ,UAAW,WAHf,EAMET,QAAU,EANZ,uDAQE,WAAqB,IAAD,OAClBsB,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBAEN,EAAKpB,SAAS,CAAEgB,UAAU,OAG5BC,SAASC,iBAAiB,SAAS,WACjC,EAAKlB,SAAS,CAAEgB,UAAU,OAG5BnB,KAAKF,QAAUG,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEI,UAAWO,QAC1B,QArBP,oBAwBE,WACE,OACE,sBAAKH,UAAU,MAAf,UACE,6CAECX,KAAKP,MAAM0B,UACV,cAAC,EAAD,CACEZ,UAAWP,KAAKP,MAAMc,mBA/BlC,GAAyBK,IAAMC,WCZ/BW,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.e076e60c.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  clockName: string,\n};\n\ntype State = {\n  time: string,\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    time: new Date().toUTCString().slice(-12, -4),\n  };\n\n  timerId = 0;\n\n  nameId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ time: new Date().toUTCString().slice(-12, -4) });\n      // eslint-disable-next-line no-console\n      console.info(this.state.time);\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Readonly<Props>): void {\n    if (prevProps.clockName !== this.props.clockName) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevProps.clockName} to ${this.props.clockName}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {this.props.clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {this.state.time}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './Clock/Clock';\n\ntype State = {\n  hasClock: boolean,\n  clockName: string,\n};\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', (event) => {\n      event.preventDefault();\n\n      this.setState({ hasClock: false });\n    });\n\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {this.state.hasClock && (\n          <Clock\n            clockName={this.state.clockName}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}